package study07_네트워크;

public class S01_소켓프로그래밍 {
    // 소켓을 이용하는 통신에서는 반드시 서버 응용프로그램과 클라이언트 응용프로그램으로 구분된다
    // 정보를 제공하는 쪽을 서버라고 부르며 정보를 이용하는 쪽을 클라이언트라고 부른다
    // 소켓에는 서버 소켓과 클라이언트 소켓의 2가지 종류가 있다

    // 1. 서버 응용프로그램은 ServerSocket 클래스를 이용하여 서버 소켓 객체를 생성하고 클라이언트의 접속을 받기 위해 기다린다
    // 2. 클라이언트 응용프로그램은 Socket 클래스를 이용하여 클라이언트 소켓 객체를 생성하고 서버에 접속을 시도한다
    // 3. 서버는 클라이언트로부터 접속 요청을 받으면 accept() 메소드에서 접속된 클라이언트와 통신하도록 전용 클라이언트 소켓을 따로 생성한다
    // 4. 서버와 클라이언트 모두 소켓으로부터 입출력 스트림을 얻어내고 데이터를 주고 받을 준비를 한다
    // 5. 서버에 생성된 클라이언트 전용 소켓과 클라이언트의 소켓이 상호 연결된 채 스트림을 이용하여 양방향으로 데이터를 주고받는다
    // 6. 서버는 클라이언트가 접속해 올 때마다 accept() 메소드에서 따로 전용 클라이언트 소켓을 생성하여 클라이언트와 통신하도록 한다
    //    통신이 끝나면 소켓을 닫는다

    // HTTP 통신은 클라이언트의 요청이 있을 때 서버에서 응답하는 단방향 통신(소켓 통신의 일종)
    // 소켓 통신은 데이터를 주고 받는 양방향 통신
}
